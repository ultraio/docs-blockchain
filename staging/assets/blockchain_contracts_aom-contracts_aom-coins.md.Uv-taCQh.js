import{_ as s,c as t,o as a,N as i}from"./chunks/framework.qSInOY95.js";const g=JSON.parse('{"title":"AOM Coins Contract","description":"","frontmatter":{"title":"AOM Coins Contract","order":105},"headers":[],"relativePath":"blockchain/contracts/aom-contracts/aom-coins.md","filePath":"blockchain/contracts/aom-contracts/aom-coins.md","lastUpdated":null}'),e={name:"blockchain/contracts/aom-contracts/aom-coins.md"},n=i(`<h1 id="aom-coins-contract-aom-coins" tabindex="-1">AOM Coins Contract (aom.coins) <a class="header-anchor" href="#aom-coins-contract-aom-coins" aria-label="Permalink to &quot;AOM Coins Contract (aom.coins)&quot;">​</a></h1><p>The AOM Coins contract serves as the token management hub for the Ash of Mankind ecosystem. This lightweight contract handles token retirement operations and acts as an intermediary for resource token lifecycle management across all AOM contracts.</p><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">​</a></h2><p>The coins contract provides:</p><ul><li>Token retirement services for resource tokens</li><li>Centralized token lifecycle management</li><li>Integration point for cross-contract token operations</li><li>Asset validation and security controls</li></ul><h2 id="contract-architecture" tabindex="-1">Contract Architecture <a class="header-anchor" href="#contract-architecture" aria-label="Permalink to &quot;Contract Architecture&quot;">​</a></h2><p>The AOM Coins contract follows a minimalist design focused on a single critical function: secure token retirement. This approach ensures:</p><ul><li><strong>Security</strong>: Minimal attack surface with focused functionality</li><li><strong>Reliability</strong>: Simple logic reduces potential failure points</li><li><strong>Integration</strong>: Clean interface for other contracts to retire tokens</li><li><strong>Auditability</strong>: Easy to verify token retirement operations</li></ul><h2 id="actions" tabindex="-1">Actions <a class="header-anchor" href="#actions" aria-label="Permalink to &quot;Actions&quot;">​</a></h2><h3 id="token-notification-handler" tabindex="-1">Token Notification Handler <a class="header-anchor" href="#token-notification-handler" aria-label="Permalink to &quot;Token Notification Handler&quot;">​</a></h3><h4 id="on-transfer" tabindex="-1"><code>on_transfer</code> <a class="header-anchor" href="#on-transfer" aria-label="Permalink to &quot;\`on_transfer\`&quot;">​</a></h4><p>Handles incoming token transfers for retirement operations.</p><p><strong>Authorization</strong>: Automatic (notification handler)</p><p><strong>Parameters</strong>:</p><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>from</code></td><td><code>name</code></td><td>Account sending tokens</td></tr><tr><td><code>to</code></td><td><code>name</code></td><td>This contract (aom.coins)</td></tr><tr><td><code>quantity</code></td><td><code>asset</code></td><td>Amount and type of tokens</td></tr><tr><td><code>memo</code></td><td><code>string</code></td><td>Transfer memo</td></tr></tbody></table><p><strong>Behavior</strong>:</p><ul><li>Validates tokens are from <code>eosio.token</code> contract</li><li>Processes &quot;retire&quot; memo by calling token retirement</li><li>Ignores outbound transfers from the contract itself</li></ul><p><strong>Memo Formats</strong>:</p><h5 id="token-retirement" tabindex="-1">Token Retirement <a class="header-anchor" href="#token-retirement" aria-label="Permalink to &quot;Token Retirement&quot;">​</a></h5><p><strong>Memo</strong>: <code>retire</code></p><p>Retires the transferred tokens from circulation, reducing total supply.</p><p><strong>Validation</strong>:</p><ul><li>Must be called by authorized token issuer</li><li>Token contract validates issuer permissions</li><li>Invalid retirement attempts will fail automatically</li></ul><p><strong>Example</strong>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Retire 1000 IRON tokens (called by AOM contracts)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cleos</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> transfer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> aom.mining</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> aom.coins</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;1000.0000 IRON&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;retire&quot;</span></span></code></pre></div><h2 id="integration-with-aom-ecosystem" tabindex="-1">Integration with AOM Ecosystem <a class="header-anchor" href="#integration-with-aom-ecosystem" aria-label="Permalink to &quot;Integration with AOM Ecosystem&quot;">​</a></h2><h3 id="cross-contract-token-flows" tabindex="-1">Cross-Contract Token Flows <a class="header-anchor" href="#cross-contract-token-flows" aria-label="Permalink to &quot;Cross-Contract Token Flows&quot;">​</a></h3><p>The coins contract serves as the retirement endpoint for various AOM operations:</p><h4 id="from-mining-contract" tabindex="-1">From Mining Contract <a class="header-anchor" href="#from-mining-contract" aria-label="Permalink to &quot;From Mining Contract&quot;">​</a></h4><ul><li><strong>Upgrade Fees</strong>: Non-ASH tokens from mine upgrades</li><li><strong>Instant Prospecting</strong>: Resource tokens paid for instant completion</li></ul><h4 id="from-construction-contract" tabindex="-1">From Construction Contract <a class="header-anchor" href="#from-construction-contract" aria-label="Permalink to &quot;From Construction Contract&quot;">​</a></h4><ul><li><strong>Building Fees</strong>: Non-ASH tokens from construction costs</li><li><strong>Instant Construction</strong>: Resource tokens for instant building</li></ul><h4 id="from-processing-contract" tabindex="-1">From Processing Contract <a class="header-anchor" href="#from-processing-contract" aria-label="Permalink to &quot;From Processing Contract&quot;">​</a></h4><ul><li><strong>Upgrade Fees</strong>: Non-ASH tokens from production speed upgrades</li></ul><h4 id="from-assembly-contract" tabindex="-1">From Assembly Contract <a class="header-anchor" href="#from-assembly-contract" aria-label="Permalink to &quot;From Assembly Contract&quot;">​</a></h4><ul><li><strong>Construction Fees</strong>: Non-ASH tokens from assembly line building</li><li><strong>Upgrade Fees</strong>: Non-ASH tokens from assembly line upgrades</li></ul><h3 id="token-lifecycle-management" tabindex="-1">Token Lifecycle Management <a class="header-anchor" href="#token-lifecycle-management" aria-label="Permalink to &quot;Token Lifecycle Management&quot;">​</a></h3><p>The AOM ecosystem implements a sophisticated token economy where:</p><ol><li><strong>Resource Generation</strong>: Raw materials mined from land</li><li><strong>Resource Processing</strong>: Raw materials converted to refined goods</li><li><strong>Resource Consumption</strong>: Refined goods used for construction/upgrades</li><li><strong>Token Retirement</strong>: Used tokens removed from circulation</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>[Mining] → [Processing] → [Construction/Upgrades] → [Retirement]</span></span>
<span class="line"><span>   ↓              ↓              ↓                      ↓</span></span>
<span class="line"><span> IRON          STEEL         (consumed)           (retired)</span></span>
<span class="line"><span> COAL          COPPER        (consumed)           (retired)</span></span>
<span class="line"><span> STONE         GLASS         (consumed)           (retired)</span></span></code></pre></div><h3 id="asset-categorization" tabindex="-1">Asset Categorization <a class="header-anchor" href="#asset-categorization" aria-label="Permalink to &quot;Asset Categorization&quot;">​</a></h3><p>The AOM system treats different assets differently:</p><h4 id="ash-primary-currency" tabindex="-1">ASH (Primary Currency) <a class="header-anchor" href="#ash-primary-currency" aria-label="Permalink to &quot;ASH (Primary Currency)&quot;">​</a></h4><ul><li><strong>Usage</strong>: Payment for services and upgrades</li><li><strong>Flow</strong>: Transferred to <code>aom.vault</code> as revenue</li><li><strong>Lifecycle</strong>: Recirculated within ecosystem</li></ul><h4 id="resource-tokens-secondary-assets" tabindex="-1">Resource Tokens (Secondary Assets) <a class="header-anchor" href="#resource-tokens-secondary-assets" aria-label="Permalink to &quot;Resource Tokens (Secondary Assets)&quot;">​</a></h4><ul><li><strong>Usage</strong>: Construction materials and upgrade components</li><li><strong>Flow</strong>: Transferred to <code>aom.coins</code> for retirement</li><li><strong>Lifecycle</strong>: Removed from circulation after use</li></ul><h2 id="security-model" tabindex="-1">Security Model <a class="header-anchor" href="#security-model" aria-label="Permalink to &quot;Security Model&quot;">​</a></h2><h3 id="authorization-validation" tabindex="-1">Authorization Validation <a class="header-anchor" href="#authorization-validation" aria-label="Permalink to &quot;Authorization Validation&quot;">​</a></h3><p>The contract implements multiple security layers:</p><h4 id="transfer-source-validation" tabindex="-1">Transfer Source Validation <a class="header-anchor" href="#transfer-source-validation" aria-label="Permalink to &quot;Transfer Source Validation&quot;">​</a></h4><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">check</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get_first_receiver</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;eosio.token&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">_n</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;only tokens from eosio.token are accepted&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>Only accepts tokens from the official Ultra token contract.</p><h4 id="self-transfer-exclusion" tabindex="-1">Self-Transfer Exclusion <a class="header-anchor" href="#self-transfer-exclusion" aria-label="Permalink to &quot;Self-Transfer Exclusion&quot;">​</a></h4><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(from </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> _self) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>Ignores outbound transfers to prevent recursion loops.</p><h4 id="asset-validation" tabindex="-1">Asset Validation <a class="header-anchor" href="#asset-validation" aria-label="Permalink to &quot;Asset Validation&quot;">​</a></h4><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">check</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(quantity.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">is_valid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;invalid asset&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">check</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(quantity.amount </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;must transfer a positive amount&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>Ensures only valid, positive amounts are processed.</p><h4 id="issuer-authorization" tabindex="-1">Issuer Authorization <a class="header-anchor" href="#issuer-authorization" aria-label="Permalink to &quot;Issuer Authorization&quot;">​</a></h4><p>The retirement operation relies on the token contract&#39;s built-in authorization:</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// This will fail if this account is not the issuer of quantity</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">action</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    permission_level{ _self, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;active&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">_n</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;eosio.token&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">_n</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;retire&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">_n</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    make_tuple</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(quantity, memo)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">send</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><p>Only accounts authorized as token issuers can successfully retire tokens.</p><h3 id="failure-modes-and-recovery" tabindex="-1">Failure Modes and Recovery <a class="header-anchor" href="#failure-modes-and-recovery" aria-label="Permalink to &quot;Failure Modes and Recovery&quot;">​</a></h3><h4 id="invalid-retirement-attempts" tabindex="-1">Invalid Retirement Attempts <a class="header-anchor" href="#invalid-retirement-attempts" aria-label="Permalink to &quot;Invalid Retirement Attempts&quot;">​</a></h4><ul><li><strong>Unauthorized Retirement</strong>: Token contract rejects non-issuer attempts</li><li><strong>Invalid Assets</strong>: Contract rejects malformed or zero amounts</li><li><strong>Wrong Token Source</strong>: Contract rejects tokens from unauthorized contracts</li></ul><h4 id="transaction-rollback" tabindex="-1">Transaction Rollback <a class="header-anchor" href="#transaction-rollback" aria-label="Permalink to &quot;Transaction Rollback&quot;">​</a></h4><p>Failed retirement attempts cause complete transaction rollback, ensuring:</p><ul><li>No partial operations</li><li>Consistent state across all contracts</li><li>Automatic fee refunds in calling contracts</li></ul><h2 id="operational-considerations" tabindex="-1">Operational Considerations <a class="header-anchor" href="#operational-considerations" aria-label="Permalink to &quot;Operational Considerations&quot;">​</a></h2><h3 id="gas-efficiency" tabindex="-1">Gas Efficiency <a class="header-anchor" href="#gas-efficiency" aria-label="Permalink to &quot;Gas Efficiency&quot;">​</a></h3><p>The contract is optimized for minimal resource usage:</p><ul><li><strong>Simple Logic</strong>: Reduces CPU consumption</li><li><strong>No State Storage</strong>: Avoids RAM costs</li><li><strong>Direct Passthrough</strong>: Minimal processing overhead</li></ul><h3 id="error-handling" tabindex="-1">Error Handling <a class="header-anchor" href="#error-handling" aria-label="Permalink to &quot;Error Handling&quot;">​</a></h3><p>Clear error messages aid in debugging and user experience:</p><ul><li><code>&quot;invalid asset&quot;</code> - Malformed asset format</li><li><code>&quot;must transfer a positive amount&quot;</code> - Zero or negative amounts</li><li><code>&quot;only tokens from eosio.token are accepted&quot;</code> - Wrong token contract</li></ul><h3 id="integration-testing" tabindex="-1">Integration Testing <a class="header-anchor" href="#integration-testing" aria-label="Permalink to &quot;Integration Testing&quot;">​</a></h3><p>When integrating with the coins contract, test scenarios should include:</p><ol><li><strong>Valid Retirement</strong>: Proper memo format with authorized issuer</li><li><strong>Invalid Asset</strong>: Malformed asset amounts or symbols</li><li><strong>Unauthorized Source</strong>: Tokens from wrong contracts</li><li><strong>Non-Issuer Retirement</strong>: Attempts by non-authorized accounts</li></ol><h2 id="contract-deployment-and-management" tabindex="-1">Contract Deployment and Management <a class="header-anchor" href="#contract-deployment-and-management" aria-label="Permalink to &quot;Contract Deployment and Management&quot;">​</a></h2><h3 id="deployment-requirements" tabindex="-1">Deployment Requirements <a class="header-anchor" href="#deployment-requirements" aria-label="Permalink to &quot;Deployment Requirements&quot;">​</a></h3><p>The AOM Coins contract requires:</p><ul><li><strong>Token Issuer Permissions</strong>: Must be authorized issuer for resource tokens</li><li><strong>Active Permissions</strong>: Sufficient permissions to call token retirement</li><li><strong>Integration Setup</strong>: Other AOM contracts must reference correct account name</li></ul><h3 id="monitoring-and-maintenance" tabindex="-1">Monitoring and Maintenance <a class="header-anchor" href="#monitoring-and-maintenance" aria-label="Permalink to &quot;Monitoring and Maintenance&quot;">​</a></h3><p>Key metrics to monitor:</p><ul><li><strong>Retirement Volume</strong>: Track tokens removed from circulation</li><li><strong>Failed Transactions</strong>: Monitor authorization failures</li><li><strong>Integration Health</strong>: Verify cross-contract calls succeed</li></ul><h3 id="upgrade-considerations" tabindex="-1">Upgrade Considerations <a class="header-anchor" href="#upgrade-considerations" aria-label="Permalink to &quot;Upgrade Considerations&quot;">​</a></h3><p>Contract upgrades should maintain:</p><ul><li><strong>API Compatibility</strong>: Other AOM contracts depend on stable interface</li><li><strong>Security Model</strong>: Authorization patterns must remain secure</li><li><strong>Token Compatibility</strong>: Must work with existing token contracts</li></ul><h2 id="usage-examples" tabindex="-1">Usage Examples <a class="header-anchor" href="#usage-examples" aria-label="Permalink to &quot;Usage Examples&quot;">​</a></h2><h3 id="direct-retirement-testing" tabindex="-1">Direct Retirement (Testing) <a class="header-anchor" href="#direct-retirement-testing" aria-label="Permalink to &quot;Direct Retirement (Testing)&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Retire tokens directly (must be issuer)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cleos</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> transfer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> alice</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> aom.coins</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;100.0000 IRON&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;retire&quot;</span></span></code></pre></div><h3 id="cross-contract-integration" tabindex="-1">Cross-Contract Integration <a class="header-anchor" href="#cross-contract-integration" aria-label="Permalink to &quot;Cross-Contract Integration&quot;">​</a></h3><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Example from another AOM contract</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">action</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    permission_level{ _self, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;active&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">_n</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ULTRA_FT,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;transfer&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">_n</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    make_tuple</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        _self,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;aom.coins&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">_n</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        asset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(amount, symbol),</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;retire&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">send</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><h2 id="best-practices" tabindex="-1">Best Practices <a class="header-anchor" href="#best-practices" aria-label="Permalink to &quot;Best Practices&quot;">​</a></h2><h3 id="for-integrating-contracts" tabindex="-1">For Integrating Contracts <a class="header-anchor" href="#for-integrating-contracts" aria-label="Permalink to &quot;For Integrating Contracts&quot;">​</a></h3><ol><li><strong>Batch Operations</strong>: Group multiple retirements when possible</li><li><strong>Error Handling</strong>: Prepare for retirement failures</li><li><strong>Asset Validation</strong>: Validate assets before sending</li><li><strong>Permission Management</strong>: Ensure proper issuer setup</li></ol><h3 id="for-system-administration" tabindex="-1">For System Administration <a class="header-anchor" href="#for-system-administration" aria-label="Permalink to &quot;For System Administration&quot;">​</a></h3><ol><li><strong>Permission Auditing</strong>: Regularly verify issuer permissions</li><li><strong>Transaction Monitoring</strong>: Track retirement patterns</li><li><strong>Integration Testing</strong>: Test all cross-contract flows</li><li><strong>Security Reviews</strong>: Regular security assessment of token flows</li></ol><p>The AOM Coins contract demonstrates that critical infrastructure can be both simple and secure, providing essential token management services while maintaining minimal complexity and maximum reliability.</p>`,99),o=[n];function r(l,c,h,d,p,k){return a(),t("div",null,o)}const m=s(e,[["render",r]]);export{g as __pageData,m as default};
