import{_ as t,c as e,o as i,N as s}from"./chunks/framework.qSInOY95.js";const k=JSON.parse('{"title":"AOM Processing Contract","description":"","frontmatter":{"title":"AOM Processing Contract","order":103},"headers":[],"relativePath":"blockchain/contracts/aom-contracts/aom-processing.md","filePath":"blockchain/contracts/aom-contracts/aom-processing.md","lastUpdated":null}'),a={name:"blockchain/contracts/aom-contracts/aom-processing.md"},o=s('<h1 id="aom-processing-contract-aom-processi" tabindex="-1">AOM Processing Contract (aom.processi) <a class="header-anchor" href="#aom-processing-contract-aom-processi" aria-label="Permalink to &quot;AOM Processing Contract (aom.processi)&quot;">​</a></h1><p>The AOM Processing contract manages resource conversion and production within the Ash of Mankind ecosystem. This contract enables players to transform raw materials into processed goods using various building types, implementing time-based production cycles and progressive claiming mechanisms.</p><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">​</a></h2><p>The processing contract enables players to:</p><ul><li>Convert raw resources into processed materials</li><li>Manage time-based production cycles</li><li>Upgrade building production capabilities</li><li>Claim processed goods progressively or in full</li><li>Handle owner reclamation of unclaimed production</li></ul><h2 id="tables" tabindex="-1">Tables <a class="header-anchor" href="#tables" aria-label="Permalink to &quot;Tables&quot;">​</a></h2><h3 id="configuration-tables" tabindex="-1">Configuration Tables <a class="header-anchor" href="#configuration-tables" aria-label="Permalink to &quot;Configuration Tables&quot;">​</a></h3><h4 id="global-singleton" tabindex="-1"><code>global</code> (Singleton) <a class="header-anchor" href="#global-singleton" aria-label="Permalink to &quot;`global` (Singleton)&quot;">​</a></h4><ul><li><strong>Scope</strong>: Contract (<code>aom.processi</code>)</li><li><strong>Description</strong>: Global contract state</li></ul><table><thead><tr><th>Field</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>locked</code></td><td><code>bool</code></td><td>Emergency lock status</td></tr></tbody></table><h4 id="prcsngsttngs-multi-index" tabindex="-1"><code>prcsngsttngs</code> (Multi-Index) <a class="header-anchor" href="#prcsngsttngs-multi-index" aria-label="Permalink to &quot;`prcsngsttngs` (Multi-Index)&quot;">​</a></h4><ul><li><strong>Scope</strong>: Contract (<code>aom.processi</code>)</li><li><strong>Primary Key</strong>: <code>output_resource.code().raw()</code></li></ul><table><thead><tr><th>Field</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>output_resource</code></td><td><code>symbol</code></td><td>Symbol of the produced resource</td></tr><tr><td><code>required_building_type</code></td><td><code>string</code></td><td>Building type required for production</td></tr><tr><td><code>base_conversion_duration_sec</code></td><td><code>uint32_t</code></td><td>Base production time in seconds</td></tr><tr><td><code>input_resources</code></td><td><code>map&lt;symbol, uint64_t&gt;</code></td><td>Required input materials and quantities</td></tr></tbody></table><h4 id="bldngsttngs-multi-index" tabindex="-1"><code>bldngsttngs</code> (Multi-Index) <a class="header-anchor" href="#bldngsttngs-multi-index" aria-label="Permalink to &quot;`bldngsttngs` (Multi-Index)&quot;">​</a></h4><ul><li><strong>Scope</strong>: Contract (<code>aom.processi</code>)</li><li><strong>Primary Key</strong>: <code>string_idx(building_type)</code></li></ul><table><thead><tr><th>Field</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>building_type</code></td><td><code>string</code></td><td>Type of building (e.g., &quot;Smelter&quot;, &quot;Forge&quot;)</td></tr><tr><td><code>production_fee</code></td><td><code>uint32_t</code></td><td>Production fee percentage (precision: 2)</td></tr><tr><td><code>upgrade_fee</code></td><td><code>map&lt;symbol, uint64_t&gt;</code></td><td>Fees for upgrading production speed</td></tr><tr><td><code>production_speed_upgrade_increment</code></td><td><code>uint64_t</code></td><td>Speed increase per upgrade (precision: 2)</td></tr><tr><td><code>max_production_speed</code></td><td><code>uint64_t</code></td><td>Maximum production speed (precision: 2)</td></tr></tbody></table><h3 id="operational-tables" tabindex="-1">Operational Tables <a class="header-anchor" href="#operational-tables" aria-label="Permalink to &quot;Operational Tables&quot;">​</a></h3><h4 id="processing-multi-index" tabindex="-1"><code>processing</code> (Multi-Index) <a class="header-anchor" href="#processing-multi-index" aria-label="Permalink to &quot;`processing` (Multi-Index)&quot;">​</a></h4><ul><li><strong>Scope</strong>: Uniq ID</li><li><strong>Primary Key</strong>: <code>start_block_time</code></li></ul><table><thead><tr><th>Field</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>user</code></td><td><code>name</code></td><td>User who started the production</td></tr><tr><td><code>output_resource</code></td><td><code>symbol</code></td><td>Resource being produced</td></tr><tr><td><code>total_qty</code></td><td><code>uint64_t</code></td><td>Total quantity being produced</td></tr><tr><td><code>claimed_qty</code></td><td><code>uint64_t</code></td><td>Quantity already claimed</td></tr><tr><td><code>start_block_time</code></td><td><code>uint32_t</code></td><td>Production start timestamp</td></tr><tr><td><code>end_block_time</code></td><td><code>uint32_t</code></td><td>Production completion timestamp</td></tr></tbody></table><h4 id="processiuser-multi-index" tabindex="-1"><code>processiuser</code> (Multi-Index) <a class="header-anchor" href="#processiuser-multi-index" aria-label="Permalink to &quot;`processiuser` (Multi-Index)&quot;">​</a></h4><ul><li><strong>Scope</strong>: User account</li><li><strong>Primary Key</strong>: <code>index</code></li><li><strong>Secondary Index</strong>: <code>start</code> (by <code>start_block_time</code>)</li></ul><table><thead><tr><th>Field</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>index</code></td><td><code>uint64_t</code></td><td>Unique entry index</td></tr><tr><td><code>uniq_id</code></td><td><code>uint64_t</code></td><td>Building Uniq used for production</td></tr><tr><td><code>output_resource</code></td><td><code>symbol</code></td><td>Resource being produced</td></tr><tr><td><code>total_qty</code></td><td><code>uint64_t</code></td><td>Total quantity being produced</td></tr><tr><td><code>claimed_qty</code></td><td><code>uint64_t</code></td><td>Quantity already claimed</td></tr><tr><td><code>start_block_time</code></td><td><code>uint32_t</code></td><td>Production start timestamp</td></tr><tr><td><code>end_block_time</code></td><td><code>uint32_t</code></td><td>Production completion timestamp</td></tr></tbody></table><h3 id="buffer-tables" tabindex="-1">Buffer Tables <a class="header-anchor" href="#buffer-tables" aria-label="Permalink to &quot;Buffer Tables&quot;">​</a></h3><h4 id="resbuffer-singleton" tabindex="-1"><code>resbuffer</code> (Singleton) <a class="header-anchor" href="#resbuffer-singleton" aria-label="Permalink to &quot;`resbuffer` (Singleton)&quot;">​</a></h4><ul><li><strong>Scope</strong>: User account</li><li><strong>Description</strong>: Buffered resources for production</li></ul><table><thead><tr><th>Field</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>output_resource</code></td><td><code>symbol</code></td><td>Desired output resource</td></tr><tr><td><code>total_qty</code></td><td><code>uint64_t</code></td><td>Total output quantity</td></tr><tr><td><code>input_resources</code></td><td><code>map&lt;symbol, uint64_t&gt;</code></td><td>Accumulated input resources</td></tr></tbody></table><h4 id="feebuffer-singleton" tabindex="-1"><code>feebuffer</code> (Singleton) <a class="header-anchor" href="#feebuffer-singleton" aria-label="Permalink to &quot;`feebuffer` (Singleton)&quot;">​</a></h4><ul><li><strong>Scope</strong>: User account</li><li><strong>Description</strong>: Buffered fees for upgrades</li></ul><table><thead><tr><th>Field</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>building_type</code></td><td><code>string</code></td><td>Building type being upgraded</td></tr><tr><td><code>total_upgrades</code></td><td><code>uint64_t</code></td><td>Number of upgrades being purchased</td></tr><tr><td><code>upgrade_fee</code></td><td><code>map&lt;symbol, uint64_t&gt;</code></td><td>Accumulated upgrade fees</td></tr></tbody></table><h2 id="actions" tabindex="-1">Actions <a class="header-anchor" href="#actions" aria-label="Permalink to &quot;Actions&quot;">​</a></h2><h3 id="administrative-actions" tabindex="-1">Administrative Actions <a class="header-anchor" href="#administrative-actions" aria-label="Permalink to &quot;Administrative Actions&quot;">​</a></h3><h4 id="updprocsttng" tabindex="-1"><code>updprocsttng</code> <a class="header-anchor" href="#updprocsttng" aria-label="Permalink to &quot;`updprocsttng`&quot;">​</a></h4><p>Updates processing settings for a resource.</p><p><strong>Authorization</strong>: Contract (<code>aom.processi</code>)</p><p><strong>Parameters</strong>:</p><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>row</code></td><td><code>processing_settings</code></td><td>Resource processing configuration</td></tr></tbody></table><p><strong>Behavior</strong>: Configures how a specific resource is produced, including required inputs and building type.</p><p><strong>CLI Example</strong>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cleos</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> action</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> aom.processi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> updprocsttng</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;{&quot;row&quot;: {&quot;output_resource&quot;: &quot;4,STEEL&quot;, &quot;required_building_type&quot;: &quot;Smelter&quot;, &quot;base_conversion_duration_sec&quot;: 7200, &quot;input_resources&quot;: [[&quot;4,IRON&quot;, 2], [&quot;4,COAL&quot;, 1]]}}&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> aom.processi@active</span></span></code></pre></div><h4 id="updbldsttng" tabindex="-1"><code>updbldsttng</code> <a class="header-anchor" href="#updbldsttng" aria-label="Permalink to &quot;`updbldsttng`&quot;">​</a></h4><p>Updates building settings for production capabilities.</p><p><strong>Authorization</strong>: Contract (<code>aom.processi</code>)</p><p><strong>Parameters</strong>:</p><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>row</code></td><td><code>building_settings</code></td><td>Building configuration</td></tr></tbody></table><p><strong>Behavior</strong>: Configures production parameters for a building type including fees and upgrade limits.</p><p><strong>CLI Example</strong>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cleos</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> action</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> aom.processi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> updbldsttng</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;{&quot;row&quot;: {&quot;building_type&quot;: &quot;Smelter&quot;, &quot;production_fee&quot;: 500, &quot;upgrade_fee&quot;: [[&quot;4,ASH&quot;, 1000]], &quot;production_speed_upgrade_increment&quot;: 25, &quot;max_production_speed&quot;: 300}}&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> aom.processi@active</span></span></code></pre></div><h4 id="updatefees" tabindex="-1"><code>updatefees</code> <a class="header-anchor" href="#updatefees" aria-label="Permalink to &quot;`updatefees`&quot;">​</a></h4><p>Updates production fees for a building type.</p><p><strong>Authorization</strong>: Contract (<code>aom.processi</code>)</p><p><strong>Parameters</strong>:</p><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>building_type</code></td><td><code>name</code></td><td>Building type to update</td></tr><tr><td><code>production_fee</code></td><td><code>uint32_t</code></td><td>New production fee (precision: 2)</td></tr></tbody></table><p><strong>CLI Example</strong>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cleos</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> action</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> aom.processi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> updatefees</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;{&quot;building_type&quot;: &quot;smelter&quot;, &quot;production_fee&quot;: 750}&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> aom.processi@active</span></span></code></pre></div><h4 id="setlocked" tabindex="-1"><code>setlocked</code> <a class="header-anchor" href="#setlocked" aria-label="Permalink to &quot;`setlocked`&quot;">​</a></h4><p>Emergency lock/unlock the contract.</p><p><strong>Authorization</strong>: Contract (<code>aom.processi</code>)</p><p><strong>Parameters</strong>:</p><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>locked</code></td><td><code>bool</code></td><td>Lock status</td></tr></tbody></table><p><strong>CLI Example</strong>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cleos</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> action</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> aom.processi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> setlocked</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;{&quot;locked&quot;: true}&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> aom.processi@active</span></span></code></pre></div><h3 id="gameplay-actions" tabindex="-1">Gameplay Actions <a class="header-anchor" href="#gameplay-actions" aria-label="Permalink to &quot;Gameplay Actions&quot;">​</a></h3><h4 id="collectprod" tabindex="-1"><code>collectprod</code> <a class="header-anchor" href="#collectprod" aria-label="Permalink to &quot;`collectprod`&quot;">​</a></h4><p>Collects processed goods from a production run.</p><p><strong>Authorization</strong>: User or Uniq owner (depending on <code>owner_claims</code>)</p><p><strong>Parameters</strong>:</p><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>user</code></td><td><code>name</code></td><td>User who started production</td></tr><tr><td><code>uniq_owner</code></td><td><code>name</code></td><td>Owner of the building Uniq</td></tr><tr><td><code>owner_claims</code></td><td><code>bool</code></td><td>Whether owner is claiming vs user</td></tr><tr><td><code>uniq_id</code></td><td><code>uint64_t</code></td><td>Building Uniq ID</td></tr><tr><td><code>start_block_time</code></td><td><code>uint32_t</code></td><td>Production start time identifier</td></tr></tbody></table><p><strong>Behavior</strong>:</p><ul><li><strong>User Claims</strong>: Can claim progressively during production or fully after completion</li><li><strong>Owner Claims</strong>: Can claim unclaimed goods 2 weeks after production completion</li></ul><p><strong>Progressive Claiming Formula</strong>:</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">claimable_amount </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (total_qty </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> claimed_qty) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> elapsed_time </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> total_production_time</span></span></code></pre></div><p><strong>CLI Examples</strong>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># User claims during production</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cleos</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> action</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> aom.processi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> collectprod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;{&quot;user&quot;: &quot;alice&quot;, &quot;uniq_owner&quot;: &quot;bob&quot;, &quot;owner_claims&quot;: false, &quot;uniq_id&quot;: 12345, &quot;start_block_time&quot;: 1640995200}&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> alice@active</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Owner reclaims after 2 weeks</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cleos</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> action</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> aom.processi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> collectprod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;{&quot;user&quot;: &quot;alice&quot;, &quot;uniq_owner&quot;: &quot;bob&quot;, &quot;owner_claims&quot;: true, &quot;uniq_id&quot;: 12345, &quot;start_block_time&quot;: 1640995200}&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bob@active</span></span></code></pre></div><h4 id="clearbuffer" tabindex="-1"><code>clearbuffer</code> <a class="header-anchor" href="#clearbuffer" aria-label="Permalink to &quot;`clearbuffer`&quot;">​</a></h4><p>Clears resource/fee buffers and refunds assets.</p><p><strong>Authorization</strong>: User</p><p><strong>Parameters</strong>:</p><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>user</code></td><td><code>name</code></td><td>User to clear buffers for</td></tr></tbody></table><p><strong>CLI Example</strong>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cleos</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> action</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> aom.processi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clearbuffer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;{&quot;user&quot;: &quot;alice&quot;}&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> alice@active</span></span></code></pre></div><h2 id="token-transfer-actions" tabindex="-1">Token Transfer Actions <a class="header-anchor" href="#token-transfer-actions" aria-label="Permalink to &quot;Token Transfer Actions&quot;">​</a></h2><p>The contract accepts token transfers for production and upgrade operations through the <code>on_transfer</code> notification.</p><h3 id="resource-production" tabindex="-1">Resource Production <a class="header-anchor" href="#resource-production" aria-label="Permalink to &quot;Resource Production&quot;">​</a></h3><p><strong>Memo Format</strong>: <code>Production,&lt;output_resource&gt;,&lt;total_qty&gt;[,&lt;uniq_id&gt;]</code></p><p><strong>Two-Phase Process</strong>:</p><ol><li><strong>Resource Collection</strong>: Send input resources without uniq_id to accumulate materials</li><li><strong>Production Start</strong>: Send final resource with uniq_id to begin production</li></ol><p><strong>Example Production Flow</strong>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Phase 1: Send input resources</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cleos</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> transfer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> alice</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> aom.processi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;200.0000 IRON&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Production,4,STEEL,100&quot;</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cleos</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> transfer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> alice</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> aom.processi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;100.0000 COAL&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Production,4,STEEL,100&quot;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Phase 2: Start production with building</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cleos</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> transfer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> alice</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> aom.processi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;0.0001 IRON&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Production,4,STEEL,100,12345&quot;</span></span></code></pre></div><h3 id="production-speed-upgrades" tabindex="-1">Production Speed Upgrades <a class="header-anchor" href="#production-speed-upgrades" aria-label="Permalink to &quot;Production Speed Upgrades&quot;">​</a></h3><p><strong>Memo Format</strong>: <code>UpgradeProductionSpeed,&lt;building_type&gt;[,&lt;uniq_id&gt;]</code></p><p><strong>Two-Phase Process</strong>:</p><ol><li><strong>Fee Collection</strong>: Send upgrade fees without uniq_id</li><li><strong>Upgrade Application</strong>: Send final fee with uniq_id to apply upgrades</li></ol><p><strong>Example Upgrade Flow</strong>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Phase 1: Send upgrade fees (for 2 upgrades)</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cleos</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> transfer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> alice</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> aom.processi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;2000.0000 ASH&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;UpgradeProductionSpeed,Smelter&quot;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Phase 2: Apply upgrades to building</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cleos</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> transfer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> alice</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> aom.processi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;0.0001 ASH&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;UpgradeProductionSpeed,Smelter,12345&quot;</span></span></code></pre></div><h2 id="production-mechanics" tabindex="-1">Production Mechanics <a class="header-anchor" href="#production-mechanics" aria-label="Permalink to &quot;Production Mechanics&quot;">​</a></h2><h3 id="production-formula" tabindex="-1">Production Formula <a class="header-anchor" href="#production-formula" aria-label="Permalink to &quot;Production Formula&quot;">​</a></h3><p>The production system calculates completion time based on:</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">adjusted_duration </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> base_duration </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> /</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> production_speed</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">end_time </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> start_time </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> adjusted_duration</span></span></code></pre></div><p>Where:</p><ul><li><code>base_duration</code>: Base conversion time from settings</li><li><code>production_speed</code>: Building&#39;s current speed (precision: 2, default: 100)</li></ul><h3 id="progressive-claiming" tabindex="-1">Progressive Claiming <a class="header-anchor" href="#progressive-claiming" aria-label="Permalink to &quot;Progressive Claiming&quot;">​</a></h3><p>Users can claim processed goods before production completes:</p><ol><li><strong>During Production</strong>: Proportional claiming based on elapsed time</li><li><strong>After Completion</strong>: Full remaining amount claimable</li><li><strong>Owner Reclaim</strong>: After 2 weeks, building owner can claim unclaimed goods</li></ol><h3 id="resource-requirements" tabindex="-1">Resource Requirements <a class="header-anchor" href="#resource-requirements" aria-label="Permalink to &quot;Resource Requirements&quot;">​</a></h3><p>Production requires exact resource ratios as configured in processing settings:</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Example: Steel production requires 2 IRON + 1 COAL per unit</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">input_resources: [</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;4,IRON&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;4,COAL&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><h2 id="building-integration" tabindex="-1">Building Integration <a class="header-anchor" href="#building-integration" aria-label="Permalink to &quot;Building Integration&quot;">​</a></h2><h3 id="building-type-validation" tabindex="-1">Building Type Validation <a class="header-anchor" href="#building-type-validation" aria-label="Permalink to &quot;Building Type Validation&quot;">​</a></h3><p>The contract validates that buildings can produce specific resources:</p><ol><li><strong>Building Ownership</strong>: User must own or have access to the building</li><li><strong>Building Type</strong>: Must match <code>required_building_type</code> for the resource</li><li><strong>Building State</strong>: Building must be operational (not under construction)</li></ol><h3 id="production-speed-system" tabindex="-1">Production Speed System <a class="header-anchor" href="#production-speed-system" aria-label="Permalink to &quot;Production Speed System&quot;">​</a></h3><p>Buildings have upgradeable production speeds:</p><ul><li><strong>Base Speed</strong>: 100 (100% speed, precision: 2)</li><li><strong>Upgrade Increment</strong>: Configurable per building type</li><li><strong>Maximum Speed</strong>: Configurable limit per building type</li></ul><h3 id="fee-structure" tabindex="-1">Fee Structure <a class="header-anchor" href="#fee-structure" aria-label="Permalink to &quot;Fee Structure&quot;">​</a></h3><p>Production operations include fees paid to building owners:</p><ul><li><strong>Production Fee</strong>: Percentage of input resources (precision: 2)</li><li><strong>Upgrade Fees</strong>: Fixed asset amounts for speed improvements</li></ul><h2 id="buffer-management" tabindex="-1">Buffer Management <a class="header-anchor" href="#buffer-management" aria-label="Permalink to &quot;Buffer Management&quot;">​</a></h2><h3 id="resource-buffering" tabindex="-1">Resource Buffering <a class="header-anchor" href="#resource-buffering" aria-label="Permalink to &quot;Resource Buffering&quot;">​</a></h3><p>The system buffers input resources to handle multi-asset production requirements:</p><ol><li><strong>Accumulation</strong>: Resources collected as they&#39;re sent</li><li><strong>Validation</strong>: Ensures correct ratios and quantities</li><li><strong>Consumption</strong>: All required resources consumed when production starts</li></ol><h3 id="fee-buffering" tabindex="-1">Fee Buffering <a class="header-anchor" href="#fee-buffering" aria-label="Permalink to &quot;Fee Buffering&quot;">​</a></h3><p>Upgrade operations buffer fees for multi-asset upgrade costs:</p><ol><li><strong>Collection</strong>: Upgrade fees accumulated incrementally</li><li><strong>Validation</strong>: Ensures all required fees are present</li><li><strong>Processing</strong>: Upgrades applied when all fees collected</li></ol><h2 id="cross-contract-integration" tabindex="-1">Cross-Contract Integration <a class="header-anchor" href="#cross-contract-integration" aria-label="Permalink to &quot;Cross-Contract Integration&quot;">​</a></h2><h3 id="token-management" tabindex="-1">Token Management <a class="header-anchor" href="#token-management" aria-label="Permalink to &quot;Token Management&quot;">​</a></h3><ul><li><strong>Input Consumption</strong>: Resources transferred to contract and consumed</li><li><strong>Output Production</strong>: New tokens issued via <code>aom.coins</code> contract</li><li><strong>Fee Handling</strong>: ASH fees transferred to vault, others retired</li></ul><h3 id="building-verification" tabindex="-1">Building Verification <a class="header-anchor" href="#building-verification" aria-label="Permalink to &quot;Building Verification&quot;">​</a></h3><p>The contract integrates with building systems to verify:</p><ul><li>Building ownership and state</li><li>Building type compatibility</li><li>Production capability and speed</li></ul><h2 id="security-considerations" tabindex="-1">Security Considerations <a class="header-anchor" href="#security-considerations" aria-label="Permalink to &quot;Security Considerations&quot;">​</a></h2><ul><li><strong>Ownership Validation</strong>: Strict validation of building access rights</li><li><strong>Resource Integrity</strong>: Prevents manipulation of input/output ratios</li><li><strong>Time Validation</strong>: Ensures proper production timing</li><li><strong>Fee Validation</strong>: Robust checks prevent fee manipulation</li><li><strong>Buffer Limits</strong>: Prevents resource/fee buffer overflow</li><li><strong>Reclaim Protection</strong>: 2-week delay protects user claiming rights</li><li><strong>Emergency Controls</strong>: Contract locking for emergency situations</li></ul><h2 id="query-examples" tabindex="-1">Query Examples <a class="header-anchor" href="#query-examples" aria-label="Permalink to &quot;Query Examples&quot;">​</a></h2><h3 id="get-processing-settings" tabindex="-1">Get Processing Settings <a class="header-anchor" href="#get-processing-settings" aria-label="Permalink to &quot;Get Processing Settings&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cleos</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> table</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> aom.processi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> aom.processi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> prcsngsttngs</span></span></code></pre></div><h3 id="get-building-settings" tabindex="-1">Get Building Settings <a class="header-anchor" href="#get-building-settings" aria-label="Permalink to &quot;Get Building Settings&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cleos</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> table</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> aom.processi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> aom.processi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bldngsttngs</span></span></code></pre></div><h3 id="get-active-production-by-uniq" tabindex="-1">Get Active Production (by Uniq) <a class="header-anchor" href="#get-active-production-by-uniq" aria-label="Permalink to &quot;Get Active Production (by Uniq)&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cleos</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> table</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> aom.processi</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 12345</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> processing</span></span></code></pre></div><h3 id="get-user-production-history" tabindex="-1">Get User Production History <a class="header-anchor" href="#get-user-production-history" aria-label="Permalink to &quot;Get User Production History&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cleos</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> table</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> aom.processi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> alice</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> processiuser</span></span></code></pre></div>',141),n=[o];function r(d,l,c,p,h,u){return i(),e("div",null,n)}const b=t(a,[["render",r]]);export{k as __pageData,b as default};
