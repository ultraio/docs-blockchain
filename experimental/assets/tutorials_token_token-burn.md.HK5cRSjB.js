import{_ as e,c as t,o as n,N as o}from"./chunks/framework.l15gEyFz.js";const b=JSON.parse('{"title":"Token Burn","description":"","frontmatter":{"title":"Token Burn","outline":[0,4],"order":2},"headers":[],"relativePath":"tutorials/token/token-burn.md","filePath":"tutorials/token/token-burn.md","lastUpdated":null}'),r={name:"tutorials/token/token-burn.md"},a=o('<h1 id="token-burn-overview" tabindex="-1">Token Burn Overview <a class="header-anchor" href="#token-burn-overview" aria-label="Permalink to &quot;Token Burn Overview&quot;">​</a></h1><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">​</a></h2><p>Token burn will allow the token creator to apply burn policy on any transfer made with specific token.</p><p>When token supply reach certain level, any transfer will be burnt with specific percentage, which is set by token creator.</p><p>Sender can be added to whitelist and will be exempted from any burn.</p><p>The burnt token amount will be deducted directly from recipient and transfer to configured receiver.</p><p>Also burn amount will be deducted directly to token current supply.</p><p>Actual burnt amount will be capped to make sure token supply will never go below the trigger threshold.</p><p>Only token creator and Ultra can set burn config for creator&#39;s token.</p><p>Once burn config is set for token, you cannot switch to other strategy.</p><p>Usage of the actions for config token burn</p><ul><li><a href="./../../blockchain/contracts/token-contract/token-actions/configburn.html">configburn - Add or update burn config for token</a></li></ul><h2 id="benefits" tabindex="-1">Benefits <a class="header-anchor" href="#benefits" aria-label="Permalink to &quot;Benefits&quot;">​</a></h2><ul><li>Allow token creator have more flexible policy with their token</li></ul>',14),i=[a];function l(c,s,u,d,p,h){return n(),t("div",null,i)}const f=e(r,[["render",l]]);export{b as __pageData,f as default};
