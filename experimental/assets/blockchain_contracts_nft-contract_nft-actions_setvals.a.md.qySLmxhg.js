import{_ as t,c as s,o as a,N as i}from"./chunks/framework.l15gEyFz.js";const u=JSON.parse('{"title":"setvals.a","description":"","frontmatter":{"title":"setvals.a","order":50},"headers":[],"relativePath":"blockchain/contracts/nft-contract/nft-actions/setvals.a.md","filePath":"blockchain/contracts/nft-contract/nft-actions/setvals.a.md","lastUpdated":null}'),e={name:"blockchain/contracts/nft-contract/nft-actions/setvals.a.md"},n=i(`<h1 id="setvals-a" tabindex="-1">setvals.a <a class="header-anchor" href="#setvals-a" aria-label="Permalink to &quot;setvals.a&quot;">​</a></h1><p>Set key values of an Uniq</p><h2 id="technical-behavior" tabindex="-1">Technical Behavior <a class="header-anchor" href="#technical-behavior" aria-label="Permalink to &quot;Technical Behavior&quot;">​</a></h2><p>Before setting values, the key have to be defined in factory with <a href="./addkeys.a.html"><code>addkeys.a</code> action</a></p><p>Only editor including owner | manager | authorized editor can update Uniq&#39;s values if the edit right is configured for them.</p><p>The key value will only store in Uniq, and will be stored as key index and key value. Key index will be referred to factory key definition list.</p><p>In <code>key_values</code>, <code>key_name</code> must be unique and existed in factory keys. <code>key_value</code> must match the type defined in factory keys.</p><p>If no <code>editor</code> is included, owner will be the editor and the editor also need to sign the contract.</p><p>No RAM payment requires for this action since it&#39;s already paid in factory level.</p><h2 id="action-parameters" tabindex="-1">Action Parameters <a class="header-anchor" href="#action-parameters" aria-label="Permalink to &quot;Action Parameters&quot;">​</a></h2><p>The properties of this type are provided below:</p><table><thead><tr><th>Property Name</th><th>C++ Type</th><th>JavaScript Type</th><th>Description</th></tr></thead><tbody><tr><td>owner</td><td>name</td><td>String</td><td>Onwer of the Uniq</td></tr><tr><td>editor</td><td>optional&lt;name&gt;</td><td>String</td><td>The authorized editor of the key</td></tr><tr><td>token_id</td><td>uint64_t</td><td>Number</td><td>The ID of the Uniq that value will be updated</td></tr><tr><td>key_values</td><td>key_values_action_vec</td><td>Object[]</td><td>The list of key name and value for updating</td></tr><tr><td>memo</td><td>string</td><td>String</td><td>Memo</td></tr></tbody></table><p><code>key_values_action_vec</code> is the vector of <code>key_values_action</code></p><h3 id="key-values-action-interface" tabindex="-1"><code>key_values_action</code> interface <a class="header-anchor" href="#key-values-action-interface" aria-label="Permalink to &quot;\`key_values_action\` interface&quot;">​</a></h3><table><thead><tr><th>Property Name</th><th>C++ Type</th><th>JavaScript Type</th><th>Description</th></tr></thead><tbody><tr><td>key_name</td><td>string</td><td>String</td><td>The name of the key defined in factory keys.</td></tr><tr><td>key_value</td><td>key_value_store</td><td>Object[]</td><td>The value that will be set for the key. Value needs to match the type defined in factory keys.</td></tr></tbody></table><p><code>key_value_store</code> will be an array with first element is type of the value and second is the value. Here is the support list and example:</p><table><thead><tr><th>Value Type</th><th>Key Def Type string</th><th>Example</th></tr></thead><tbody><tr><td>int8</td><td>int8</td><td>[&quot;int8&quot;, 0]</td></tr><tr><td>int16</td><td>int16</td><td>[&quot;int16&quot;, 0]</td></tr><tr><td>int32</td><td>int32</td><td>[&quot;int32&quot;, 0]</td></tr><tr><td>int64</td><td>int64</td><td>[&quot;int64&quot;, 0]</td></tr><tr><td>uint8</td><td>uint8</td><td>[&quot;uint8&quot;, 0]</td></tr><tr><td>uint16</td><td>uint16</td><td>[&quot;uint16&quot;, 0]</td></tr><tr><td>uint32</td><td>uint32</td><td>[&quot;uint32&quot;, 0]</td></tr><tr><td>uint64</td><td>uint64</td><td>[&quot;uint64&quot;, 0]</td></tr><tr><td>float</td><td>float32</td><td>[&quot;float32&quot;, 0.1]</td></tr><tr><td>double</td><td>float64</td><td>[&quot;float64&quot;, 0.1]</td></tr><tr><td>string</td><td>string</td><td>[&quot;string&quot;, &quot;a&quot;]</td></tr></tbody></table><h2 id="cli-cleos" tabindex="-1">CLI - cleos <a class="header-anchor" href="#cli-cleos" aria-label="Permalink to &quot;CLI - cleos&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cleos</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> action</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> eosio.nft.ft</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> setvals.a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;{ &quot;owner&quot;: &quot;alice&quot;, &quot;editor&quot;: null, &quot;token_id&quot;: 8, &quot;keys_values&quot;: [ &quot;key_name&quot;: &quot;keyname&quot;, &quot;key_value&quot;: [ &quot;uint8&quot;, 3 ] ], &quot;memo&quot;: &quot;set key value&quot; }&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> alice@active</span></span></code></pre></div><h2 id="javascript-eosjs" tabindex="-1">JavaScript - eosjs <a class="header-anchor" href="#javascript-eosjs" aria-label="Permalink to &quot;JavaScript - eosjs&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> transact</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            account: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;eosio.nft.ft&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;setvals.a&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            authorization: [{ actor: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;alice&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, permission: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;active&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            data:  {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                owner: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;alice&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                editor: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                token_id: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                keys_values: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    key_name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;keyname&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    key_value: [ </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;uint8&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                ],</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                &quot;memo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;set key value&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        blocksBehind: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        expireSeconds: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div>`,21),l=[n];function d(h,o,r,p,k,c){return a(),s("div",null,l)}const y=t(e,[["render",d]]);export{u as __pageData,y as default};
